# Generated by Django 5.2.7 on 2025-10-17 12:14

import django.db.models.deletion
import django.utils.timezone
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProgramsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text="Краткое описание страницы 'Программы'", verbose_name='Введение')),
                ('featured_manufacturers', wagtail.fields.StreamField([('manufacturer', 5)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Название производителя'}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'blockquote'], 'label': 'Текст'}), 2: ('wagtail.blocks.StructBlock', [[('content', 1)]], {'label': 'Краткое описание'}), 3: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Логотип'}), 4: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Ссылка на категорию продуктов', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('name', 0), ('description', 2), ('image', 3), ('link', 4)]], {})}, verbose_name='Выделенные производители')),
            ],
            options={
                'verbose_name': 'Индексная страница программ',
                'verbose_name_plural': 'Индексные страницы программ',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProgramCategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Краткое описание категории', verbose_name='Введение в категорию')),
                ('items_per_page', models.PositiveIntegerField(default=9, verbose_name='Продуктов на странице')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Изображение категории')),
            ],
            options={
                'verbose_name': 'Категория программ',
                'verbose_name_plural': 'Категории программ',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SingleProgramPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('manufacturer', models.CharField(choices=[('1c-bitrix', '1С-Битрикс'), ('abbyy', 'ABBYY'), ('drweb', 'DrWeb'), ('entensys', 'Entensys'), ('eset', 'Eset'), ('ideco', 'Ideco'), ('microsoft', 'Microsoft'), ('navitel', 'Navitel'), ('nanocad', 'nanoCAD'), ('norton', 'Norton'), ('novell', 'Novell'), ('magix', 'Magix'), ('panda', 'Panda'), ('pervasive', 'Pervasive'), ('pinnacle', 'Pinnacle'), ('symantec', 'Symantec'), ('redhat', 'RedHat'), ('aladdin', 'Аладдин Р.Д.'), ('askon', 'АСКОН'), ('venta', 'Вента'), ('vinsmeta', 'ВинСмета'), ('inek', 'ИНЭК'), ('kaspersky', 'Лаборатория Касперского'), ('promt', 'ПРОМТ'), ('smart-soft', 'Смарт-Софт'), ('trafika', 'Трафика'), ('khronobus', 'Хронобус'), ('ergosolo', 'Эргосоло')], max_length=100, verbose_name='Производитель')),
                ('headline', models.CharField(max_length=255, verbose_name='Заголовок продукта')),
                ('intro', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('content', wagtail.fields.StreamField([('hero', 5), ('text', 7), ('card_grid', 16), ('accordion', 22), ('cta', 27)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Заголовок Hero', 'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Подзаголовок Hero', 'required': True}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Изображение Hero', 'required': True}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Текст кнопки', 'required': False}), 4: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Ссылка кнопки', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 0), ('subtitle', 1), ('image', 2), ('button_text', 3), ('button_link', 4)]], {}), 6: ('wagtail.blocks.RichTextBlock', (), {'features': ['h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'blockquote'], 'label': 'Текст'}), 7: ('wagtail.blocks.StructBlock', [[('content', 6)]], {}), 8: ('wagtail.blocks.CharBlock', (), {'label': 'Заголовок сетки', 'required': True}), 9: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('numbered', 'Нумерованный'), ('bulleted', 'Маркированный'), ('icon_grid', 'Сетка с иконками'), ('image_grid', 'Сетка с изображениями')], 'label': 'Тип сетки'}), 10: ('wagtail.blocks.CharBlock', (), {'label': 'Название', 'required': True}), 11: ('wagtail.blocks.RichTextBlock', (), {'label': 'Описание', 'required': False}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Иконка (SVG)', 'required': False}), 13: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Изображение', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('title', 10), ('description', 11), ('icon', 12), ('image', 13)]], {}), 15: ('wagtail.blocks.ListBlock', (14,), {'label': 'Элементы сетки'}), 16: ('wagtail.blocks.StructBlock', [[('title', 8), ('grid_type', 9), ('items', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'label': 'Заголовок аккордеона', 'required': True}), 18: ('wagtail.blocks.CharBlock', (), {'label': 'Вопрос/Заголовок', 'required': True}), 19: ('wagtail.blocks.RichTextBlock', (), {'label': 'Ответ/Описание', 'required': True}), 20: ('wagtail.blocks.StructBlock', [[('question', 18), ('answer', 19)]], {}), 21: ('wagtail.blocks.ListBlock', (20,), {'label': 'Элементы аккордеона'}), 22: ('wagtail.blocks.StructBlock', [[('title', 17), ('items', 21)]], {}), 23: ('wagtail.blocks.CharBlock', (), {'label': 'Заголовок CTA', 'required': True}), 24: ('wagtail.blocks.RichTextBlock', (), {'label': 'Описание CTA', 'required': True}), 25: ('wagtail.blocks.CharBlock', (), {'label': 'Текст кнопки', 'required': True}), 26: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Ссылка', 'required': False}), 27: ('wagtail.blocks.StructBlock', [[('title', 23), ('description', 24), ('button_text', 25), ('button_link', 26)]], {})}, verbose_name='Блоки страницы продукта')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Изображение продукта')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
            bases=('wagtailcore.page',),
        ),
    ]
