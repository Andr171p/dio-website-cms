# Generated by Django 5.2.6 on 2025-09-15 20:32

import django.db.models.deletion
import wagtail.fields
import wagtail.models.preview
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='formfield',
            name='page',
        ),
        migrations.AlterModelOptions(
            name='sitesettings',
            options={'verbose_name': 'Настройки сайта'},
        ),
        migrations.RemoveField(
            model_name='sitesettings',
            name='site',
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='address',
            field=models.TextField(blank=True, max_length=100, verbose_name='г.Тюмень'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='expire_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='expired',
            field=models.BooleanField(default=False, editable=False, verbose_name='expired'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='first_published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='go_live_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='go live date/time'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='has_unpublished_changes',
            field=models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='last_published_at',
            field=models.DateTimeField(editable=False, null=True, verbose_name='last published at'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='latest_revision',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='live',
            field=models.BooleanField(default=True, editable=False, verbose_name='live'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='live_revision',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='name',
            field=models.CharField(blank=True, default='Название компании', max_length=100, verbose_name='Название компании'),
        ),
        migrations.CreateModel(
            name='ContactSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('primary_phone', models.CharField(blank=True, max_length=20, verbose_name='Основной телефон')),
                ('secondary_phone', models.CharField(blank=True, max_length=20, verbose_name='Дополнительный телефон')),
                ('primary_email', models.EmailField(blank=True, max_length=254, verbose_name='Основной email')),
                ('secondary_email', models.EmailField(blank=True, max_length=254, verbose_name='Дополнительный email')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('map_embed_code', models.TextField(blank=True, help_text='HTML код для встраивания карты', verbose_name='Код карты')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
            ],
            options={
                'verbose_name': 'Настройки контактов',
                'verbose_name_plural': 'Настройки контактов',
            },
            bases=(wagtail.models.preview.PreviewableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FooterSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('copyright_text', models.CharField(default='© 2025 Все права защищены', max_length=200, verbose_name='Текст копирайта')),
                ('company_address', models.TextField(blank=True, verbose_name='Адрес компании')),
                ('working_hours', models.CharField(blank=True, max_length=100, verbose_name='Часы работы')),
                ('social_links', wagtail.fields.StreamField([('social', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Платформа', 'max_length': 50}), 1: ('wagtail.blocks.URLBlock', (), {'label': 'Ссылка'}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Иконка (например, facebook, twitter)', 'max_length': 50}), 3: ('wagtail.blocks.StructBlock', [[('platform', 0), ('url', 1), ('icon', 2)]], {'label': 'Социальная сеть'})}, verbose_name='Социальные сети')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
            ],
            options={
                'verbose_name': 'Настройки футера',
                'verbose_name_plural': 'Настройки футеров',
            },
            bases=(wagtail.models.preview.PreviewableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HeaderSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', models.BooleanField(default=True, editable=False, verbose_name='live')),
                ('has_unpublished_changes', models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes')),
                ('first_published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at')),
                ('last_published_at', models.DateTimeField(editable=False, null=True, verbose_name='last published at')),
                ('go_live_at', models.DateTimeField(blank=True, null=True, verbose_name='go live date/time')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time')),
                ('expired', models.BooleanField(default=False, editable=False, verbose_name='expired')),
                ('site_title', models.CharField(blank=True, help_text='Название, которое отображается в header', max_length=100, verbose_name='Название сайта')),
                ('site_subtitle', models.CharField(blank=True, help_text='Подзаголовок, отображаемый под названием сайта', max_length=100, verbose_name='Подзаголовок сайта')),
                ('phone_number', models.CharField(blank=True, help_text='Основной телефон для связи', max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, help_text='Основной email для связи', max_length=254, verbose_name='Email')),
                ('consultation_button_text', models.CharField(blank=True, default='Консультация', help_text='Текст для кнопки консультации', max_length=50, verbose_name='Текст кнопки консультации')),
                ('nav_items', wagtail.fields.StreamField([('nav_item', 7)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Название пункта', 'max_length': 50}), 1: ('wagtail.blocks.CharBlock', (), {'blank': True, 'label': 'Ссылка (например, /about или #contact)', 'max_length': 100}), 2: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Ссылка на страницу Wagtail', 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Название подпункта', 'max_length': 50}), 4: ('wagtail.blocks.CharBlock', (), {'blank': True, 'label': 'Ссылка подпункта', 'max_length': 100}), 5: ('wagtail.blocks.StructBlock', [[('name', 3), ('href', 4), ('page_link', 2)]], {}), 6: ('wagtail.blocks.ListBlock', (5,), {'blank': True, 'label': 'Подменю', 'max_num': 5}), 7: ('wagtail.blocks.StructBlock', [[('name', 0), ('href', 1), ('page_link', 2), ('submenu', 6)]], {'label': 'Пункт меню'})}, verbose_name='Пункты меню')),
                ('latest_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision')),
                ('live_revision', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision')),
                ('logo', models.ForeignKey(blank=True, help_text='Логотип для header. Рекомендуемый размер: 40x40px', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Логотип сайта')),
            ],
            options={
                'verbose_name': 'Настройки хедера',
                'verbose_name_plural': 'Настройки хедеров',
            },
            bases=(wagtail.models.preview.PreviewableMixin, models.Model),
        ),
        migrations.DeleteModel(
            name='ContactPage',
        ),
        migrations.DeleteModel(
            name='FormField',
        ),
    ]
