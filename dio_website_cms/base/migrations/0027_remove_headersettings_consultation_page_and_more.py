# Generated by Django 5.2.6 on 2025-09-25 08:00

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0026_remove_headersettings_expire_at_and_more'),
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='headersettings',
            name='consultation_page',
        ),
        migrations.AddField(
            model_name='headersettings',
            name='consultation_button_url',
            field=models.URLField(blank=True, help_text='URL для кнопки консультации'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='expire_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='expired',
            field=models.BooleanField(default=False, editable=False, verbose_name='expired'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='first_published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first published at'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='go_live_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='go live date/time'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='has_unpublished_changes',
            field=models.BooleanField(default=False, editable=False, verbose_name='has unpublished changes'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='last_published_at',
            field=models.DateTimeField(editable=False, null=True, verbose_name='last published at'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='latest_revision',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='latest revision'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='live',
            field=models.BooleanField(default=True, editable=False, verbose_name='live'),
        ),
        migrations.AddField(
            model_name='headersettings',
            name='live_revision',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.revision', verbose_name='live revision'),
        ),
        migrations.AlterField(
            model_name='headersettings',
            name='nav_items',
            field=wagtail.fields.StreamField([('nav_item', 19)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'help_text': 'Название пункта меню', 'label': 'Название пункта*', 'max_length': 255, 'required': True}), 1: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Выберите страницу для ссылки', 'label': 'Страница', 'required': False}), 2: ('wagtail.blocks.URLBlock', (), {'help_text': 'Укажите внешний URL, если страница не выбрана', 'label': 'Внешняя ссылка', 'required': False}), 3: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('none', 'Без подменю'), ('simple', 'Простое подменю'), ('grouped', 'Группированное подменю с карточкой')], 'help_text': 'Выберите тип подменю: без подменю, простое подменю или группированное подменю с карточкой', 'label': 'Тип меню*'}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Название подпункта', 'label': 'Название подпункта*', 'max_length': 255, 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('name', 4), ('page', 1), ('external_url', 2)]], {}), 6: ('wagtail.blocks.ListBlock', (5,), {'help_text': 'Используется, если выбран тип "Простое подменю"', 'label': 'Простые элементы подменю', 'required': False}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Например: Автоматизация бизнеса', 'label': 'Название группы*', 'max_length': 255, 'required': True}), 8: ('wagtail.blocks.TextBlock', (), {'help_text': 'Краткое описание подпункта', 'label': 'Описание', 'required': False}), 9: ('wagtail.blocks.TextBlock', (), {'help_text': 'Вставьте SVG код для иконки', 'label': 'SVG код иконки', 'required': False}), 10: ('wagtail.blocks.StructBlock', [[('name', 4), ('page', 1), ('external_url', 2), ('description', 8), ('icon_svg', 9)]], {}), 11: ('wagtail.blocks.ListBlock', (10,), {'label': 'Элементы подменю', 'required': False}), 12: ('wagtail.blocks.StructBlock', [[('group_title', 7), ('items', 11)]], {}), 13: ('wagtail.blocks.ListBlock', (12,), {'help_text': 'Используется, если выбран тип "Группированное подменю"', 'label': 'Группы выпадающего меню', 'max_num': 3, 'required': False}), 14: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Включить карточку ссылки', 'label': 'Включить карточку', 'required': False}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'Название карточки', 'label': 'Название карточки', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.TextBlock', (), {'help_text': 'Описание карточки', 'label': 'Описание карточки', 'required': False}), 17: ('wagtail.blocks.CharBlock', (), {'default': 'Подробнее', 'help_text': 'Текст кнопки на карточке', 'label': 'Текст кнопки*', 'max_length': 255, 'required': False}), 18: ('wagtail.blocks.StructBlock', [[('enabled', 14), ('title', 15), ('description', 16), ('page', 1), ('external_url', 2), ('button_text', 17)]], {'label': 'Карточка ссылки', 'required': False}), 19: ('wagtail.blocks.StructBlock', [[('name', 0), ('page', 1), ('external_url', 2), ('menu_type', 3), ('simple_dropdown_items', 6), ('dropdown_groups', 13), ('card_link', 18)]], {'icon': 'list-ul', 'label': 'Пункт меню'})}, null=True),
        ),
    ]
